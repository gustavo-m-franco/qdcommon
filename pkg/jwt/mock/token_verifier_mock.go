// Code generated by MockGen. DO NOT EDIT.
// Source: token_verifier.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt"
	gomock "github.com/golang/mock/gomock"
)

// MockTokenVerifierer is a mock of TokenVerifierer interface.
type MockTokenVerifierer struct {
	ctrl     *gomock.Controller
	recorder *MockTokenVerifiererMockRecorder
}

// MockTokenVerifiererMockRecorder is the mock recorder for MockTokenVerifierer.
type MockTokenVerifiererMockRecorder struct {
	mock *MockTokenVerifierer
}

// NewMockTokenVerifierer creates a new mock instance.
func NewMockTokenVerifierer(ctrl *gomock.Controller) *MockTokenVerifierer {
	mock := &MockTokenVerifierer{ctrl: ctrl}
	mock.recorder = &MockTokenVerifiererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenVerifierer) EXPECT() *MockTokenVerifiererMockRecorder {
	return m.recorder
}

// Verify mocks base method.
func (m *MockTokenVerifierer) Verify(token string) (*jwt.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", token)
	ret0, _ := ret[0].(*jwt.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockTokenVerifiererMockRecorder) Verify(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockTokenVerifierer)(nil).Verify), token)
}

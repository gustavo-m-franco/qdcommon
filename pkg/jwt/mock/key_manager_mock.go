// Code generated by MockGen. DO NOT EDIT.
// Source: key_manager.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	rsa "crypto/rsa"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeyManagerer is a mock of KeyManagerer interface.
type MockKeyManagerer struct {
	ctrl     *gomock.Controller
	recorder *MockKeyManagererMockRecorder
}

// MockKeyManagererMockRecorder is the mock recorder for MockKeyManagerer.
type MockKeyManagererMockRecorder struct {
	mock *MockKeyManagerer
}

// NewMockKeyManagerer creates a new mock instance.
func NewMockKeyManagerer(ctrl *gomock.Controller) *MockKeyManagerer {
	mock := &MockKeyManagerer{ctrl: ctrl}
	mock.recorder = &MockKeyManagererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyManagerer) EXPECT() *MockKeyManagererMockRecorder {
	return m.recorder
}

// GenerateNewKeyPair mocks base method.
func (m *MockKeyManagerer) GenerateNewKeyPair() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateNewKeyPair")
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateNewKeyPair indicates an expected call of GenerateNewKeyPair.
func (mr *MockKeyManagererMockRecorder) GenerateNewKeyPair() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateNewKeyPair", reflect.TypeOf((*MockKeyManagerer)(nil).GenerateNewKeyPair))
}

// GetPublicKey mocks base method.
func (m *MockKeyManagerer) GetPublicKey(ctx context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicKey", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicKey indicates an expected call of GetPublicKey.
func (mr *MockKeyManagererMockRecorder) GetPublicKey(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicKey", reflect.TypeOf((*MockKeyManagerer)(nil).GetPublicKey), ctx)
}

// GetRSAPrivateKey mocks base method.
func (m *MockKeyManagerer) GetRSAPrivateKey() *rsa.PrivateKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRSAPrivateKey")
	ret0, _ := ret[0].(*rsa.PrivateKey)
	return ret0
}

// GetRSAPrivateKey indicates an expected call of GetRSAPrivateKey.
func (mr *MockKeyManagererMockRecorder) GetRSAPrivateKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRSAPrivateKey", reflect.TypeOf((*MockKeyManagerer)(nil).GetRSAPrivateKey))
}

// GetRSAPublicKey mocks base method.
func (m *MockKeyManagerer) GetRSAPublicKey() *rsa.PublicKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRSAPublicKey")
	ret0, _ := ret[0].(*rsa.PublicKey)
	return ret0
}

// GetRSAPublicKey indicates an expected call of GetRSAPublicKey.
func (mr *MockKeyManagererMockRecorder) GetRSAPublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRSAPublicKey", reflect.TypeOf((*MockKeyManagerer)(nil).GetRSAPublicKey))
}
